/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: 991519166 (https://sketchfab.com/991519166)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/galaxy-dbb2f075329747a09cc8add2ad05acad
Title: Sun
*/


import { useRef, useEffect } from 'react';

import { useAnimations, useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

import galaxyScene from '../assets/3d/sun.glb';

const Sun = (props) => {
    const galaxyRef = useRef();
    const { scene, animations } = useGLTF(galaxyScene);
    const { actions } = useAnimations(animations, galaxyRef);
    
    useEffect(() => {
        actions['Take 001'].play();
    }, [])

    useFrame(({ clock, camera }) => {
        // Update the Y position to simulate sun-like motion using a sine wave
        galaxyRef.current.position.y = Math.sin(clock.elapsedTime) * 0.2 + 2;
    
        // Check if the sun reached a certain endpoint relative to the camera
        if (galaxyRef.current.position.x > camera.position.x + 10) {
          // Change direction to backward and rotate the sun 180 degrees on the y-axis
          galaxyRef.current.rotation.y = Math.PI;
        } else if (galaxyRef.current.position.x < camera.position.x - 4) {
          // Change direction to forward and reset the sun's rotation
          galaxyRef.current.rotation.y = 0;
        }
    
        // Update the X and Z positions based on the direction
        if (galaxyRef.current.rotation.y === 0) {
          // Moving forward
          galaxyRef.current.position.x += 0.1;
          galaxyRef.current.position.z -= 0.1;
        } else {
          // Moving backward
          galaxyRef.current.position.x -= 0.1;
          galaxyRef.current.position.z += 0.1;
        }
    });

    return (
        <mesh
            position={[0, 0, 0]} 
            scale={[0.04, 0.04, 0.04]}
            ref={galaxyRef}
        >
            <primitive object={scene} />
        </mesh>
    );
}

export default Sun;